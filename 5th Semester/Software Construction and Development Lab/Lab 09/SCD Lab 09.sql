--Hafsa Salman
--22K-5161
--SCD Lab 09

CREATE TABLE USERS (
    USERID NUMBER PRIMARY KEY,
    FULL_NAME VARCHAR2(100) NOT NULL,
    EMAIL VARCHAR2(50) UNIQUE NOT NULL,
    PASSWORD VARCHAR2(16) NOT NULL,
    DOB VARCHAR2(20),
    USER_ROLE VARCHAR2(20) CHECK (USER_ROLE IN ('USER', 'ADMIN', 'SUPER_ADMIN')) NOT NULL,
    CREATION_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- INSERT DEFAULT SUPER ADMIN
INSERT INTO USERS (USERID, FULL_NAME, EMAIL, PASSWORD, DOB, USER_ROLE)
VALUES (1, 'SUPER ADMIN', 'SUPERADMIN@EXAMPLE.COM', 'SAPASSWORD', '1990-01-01', 'SUPER_ADMIN');

INSERT INTO USERS (USERID, FULL_NAME, EMAIL, PASSWORD, DOB, USER_ROLE)
VALUES (2, 'ADMIN', 'ADMIN@EXAMPLE.COM', 'APASSWORD', '1990-01-02', 'ADMIN');

CREATE TABLE CATEGORIES (
    CATEGORYID NUMBER PRIMARY KEY,
    CATEGORY_NAME VARCHAR2(100) UNIQUE NOT NULL
);

-- SAMPLE CATEGORY ENTRIES
INSERT INTO CATEGORIES (CATEGORYID, CATEGORY_NAME) VALUES (1, 'APPETIZERS');
INSERT INTO CATEGORIES (CATEGORYID, CATEGORY_NAME) VALUES (2, 'MAIN COURSE');
INSERT INTO CATEGORIES (CATEGORYID, CATEGORY_NAME) VALUES (3, 'DESSERTS');
INSERT INTO CATEGORIES (CATEGORYID, CATEGORY_NAME) VALUES (4, 'BEVERAGES');

CREATE TABLE ITEMS (
    ITEMID NUMBER PRIMARY KEY,
    ITEM_NAME VARCHAR2(100) NOT NULL,
    CATEGORYID NUMBER NOT NULL,
    PRICE NUMBER NOT NULL,
    STOCK NUMBER NOT NULL,
    FOREIGN KEY (CATEGORYID) REFERENCES CATEGORIES(CATEGORYID) ON DELETE CASCADE
);

-- SAMPLE ITEM ENTRIES
INSERT INTO ITEMS (ITEMID, ITEM_NAME, CATEGORYID, PRICE, STOCK) VALUES (1, 'SPRING ROLLS', 1, 5.99, 100);
INSERT INTO ITEMS (ITEMID, ITEM_NAME, CATEGORYID, PRICE, STOCK) VALUES (2, 'STEAK', 2, 19.99, 50);
INSERT INTO ITEMS (ITEMID, ITEM_NAME, CATEGORYID, PRICE, STOCK) VALUES (3, 'CHOCOLATE CAKE', 3, 7.50, 30);
INSERT INTO ITEMS (ITEMID, ITEM_NAME, CATEGORYID, PRICE, STOCK) VALUES (4, 'COCA COLA', 4, 2.00, 200);

CREATE TABLE ORDERS (
    ORDERID NUMBER PRIMARY KEY,
    USERID NUMBER NOT NULL,
    ORDER_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    STATUS VARCHAR2(20) DEFAULT 'PENDING' CHECK (STATUS IN ('PENDING', 'PROCESSED', 'COMPLETED')),
    PAYMENT_METHOD VARCHAR2(20) DEFAULT 'CASH ON DELIVERY',
    FOREIGN KEY (USERID) REFERENCES USERS(USERID) ON DELETE CASCADE
);

-- SAMPLE ORDER ENTRIES
INSERT INTO ORDERS (ORDERID, USERID, STATUS) VALUES (1, 1, 'PENDING');
INSERT INTO ORDERS (ORDERID, USERID, STATUS) VALUES (2, 1, 'PENDING');

CREATE TABLE ORDER_ITEMS (
    ORDER_ITEM_ID NUMBER PRIMARY KEY,
    ORDERID NUMBER NOT NULL,
    ITEMID NUMBER NOT NULL,
    QUANTITY NUMBER NOT NULL,
    PRICE_AT_ORDER NUMBER NOT NULL,
    FOREIGN KEY (ORDERID) REFERENCES ORDERS(ORDERID) ON DELETE CASCADE,
    FOREIGN KEY (ITEMID) REFERENCES ITEMS(ITEMID) ON DELETE CASCADE
);

-- SAMPLE ORDER ITEM ENTRIES
INSERT INTO ORDER_ITEMS (ORDER_ITEM_ID, ORDERID, ITEMID, QUANTITY, PRICE_AT_ORDER) VALUES (1, 1, 1, 2, 5.99);
INSERT INTO ORDER_ITEMS (ORDER_ITEM_ID, ORDERID, ITEMID, QUANTITY, PRICE_AT_ORDER) VALUES (2, 1, 3, 1, 7.50);
INSERT INTO ORDER_ITEMS (ORDER_ITEM_ID, ORDERID, ITEMID, QUANTITY, PRICE_AT_ORDER) VALUES (3, 2, 2, 1, 19.99);
INSERT INTO ORDER_ITEMS (ORDER_ITEM_ID, ORDERID, ITEMID, QUANTITY, PRICE_AT_ORDER) VALUES (4, 2, 4, 3, 2.00);

-- SELECT STATEMENTS
SELECT * FROM USERS;
SELECT * FROM CATEGORIES;
SELECT * FROM ITEMS;
SELECT * FROM ORDERS;
SELECT * FROM ORDER_ITEMS;